{"version":3,"sources":["types/ActionTypes.ts","types/FilterStatus.ts","providers/StateProvider.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["ActionTypes","FilterStatus","reducer","state","action","type","SELECT_TODO","selectedTodo","intialState","DispatchContext","createContext","StateContext","StateProvider","children","useReducer","dispatch","Provider","value","TodoItem","todo","useContext","className","id","completed","classNames","title","onClick","TodoList","todos","map","TodoFilter","filterByStatus","setFilterByStatus","filterByContent","setFilterByContent","onChange","event","target","ACTIVE","COMPLETE","ALL","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","stringIncludes","full","part","toLowerCase","includes","App","setTodos","visibleTodos","setVisibleTodos","initialized","setInitialized","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b868b97.chunk.js","sourcesContent":["export enum ActionTypes {\n  SELECT_TODO,\n}\n","export enum FilterStatus {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETE = 'completed',\n}\n","import { createContext, Dispatch, useReducer } from 'react';\nimport { Action } from '../types/Action';\nimport { ActionTypes } from '../types/ActionTypes';\nimport { Todo } from '../types/Todo';\n\ntype State = {\n  selectedTodo: Todo | null,\n};\n\ntype Reducer = (state: State, action: Action) => State;\n\nconst reducer: Reducer = (state, action) => {\n  switch (action.type) {\n    case ActionTypes.SELECT_TODO:\n      return {\n        ...state,\n        selectedTodo: action.selectedTodo || null,\n      };\n    default:\n      return state;\n  }\n};\n\nconst intialState: State = {\n  selectedTodo: null,\n};\n\nexport const DispatchContext = createContext<Dispatch<Action>>(\n  () => {},\n);\nexport const StateContext = createContext(intialState);\n\nexport const StateProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, intialState);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>\n        {children}\n      </StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport classNames from 'classnames';\n\nimport { DispatchContext, StateContext } from '../../providers/StateProvider';\n\nimport { Todo } from '../../types/Todo';\nimport { ActionTypes } from '../../types/ActionTypes';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const dispatch = useContext(DispatchContext);\n  const { selectedTodo } = useContext(StateContext);\n\n  return (\n    <tr data-cy=\"todo\" className=\"\">\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames(\n            {\n              'has-text-danger': !todo.completed,\n              'has-text-success': todo.completed,\n            },\n          )}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => dispatch({\n            type: ActionTypes.SELECT_TODO,\n            selectedTodo: todo,\n          })}\n        >\n          <span className=\"icon\">\n            {todo.id === selectedTodo?.id ? (\n              <i className=\"far fa-eye-slash\" />\n            ) : (\n              <i className=\"far fa-eye\" />\n            )}\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import { TodoItem } from '../TodoItem';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {\n        todos.map(todo => (\n          <TodoItem\n            todo={todo}\n            key={todo.id}\n          />\n        ))\n      }\n    </tbody>\n  </table>\n);\n","import { ChangeEvent } from 'react';\nimport { FilterStatus } from '../../types/FilterStatus';\n\ntype Props = {\n  filterByStatus: FilterStatus;\n  setFilterByStatus: (status: FilterStatus) => void;\n  filterByContent: string;\n  setFilterByContent: (search: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterByStatus,\n  setFilterByStatus,\n  filterByContent,\n  setFilterByContent,\n}) => {\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    const status = event.target.value;\n\n    switch (status) {\n      case 'active':\n        setFilterByStatus(FilterStatus.ACTIVE);\n        break;\n      case 'completed':\n        setFilterByStatus(FilterStatus.COMPLETE);\n        break;\n      case 'all':\n      default:\n        setFilterByStatus(FilterStatus.ALL);\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterByStatus}\n            onChange={handleSelect}\n          >\n            <option value={FilterStatus.ALL}>All</option>\n            <option value={FilterStatus.ACTIVE}>Active</option>\n            <option value={FilterStatus.COMPLETE}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filterByContent}\n          onChange={event => (\n            setFilterByContent(event.target.value)\n          )}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {filterByContent && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Clear search query\"\n              onClick={() => setFilterByContent('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useContext, useEffect, useState } from 'react';\n\nimport { Loader } from '../Loader';\n\nimport { DispatchContext, StateContext } from '../../providers/StateProvider';\n\nimport { getUser } from '../../api';\n\nimport { User } from '../../types/User';\nimport { ActionTypes } from '../../types/ActionTypes';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useContext(DispatchContext);\n  const { selectedTodo } = useContext(StateContext);\n\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (!selectedTodo) {\n      return;\n    }\n\n    getUser(selectedTodo.userId)\n      .then(setUser);\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user || !selectedTodo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"Select todo\"\n              onClick={() => dispatch({\n                type: ActionTypes.SELECT_TODO,\n                selectedTodo: null,\n              })}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                selectedTodo.completed ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useContext, useEffect, useState } from 'react';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { StateContext } from './providers/StateProvider';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\n\nimport { Todo } from './types/Todo';\nimport { FilterStatus } from './types/FilterStatus';\n\nconst stringIncludes = (full: string, part: string) => (\n  full.toLowerCase().includes(part.toLowerCase())\n);\n\nexport const App: React.FC = () => {\n  const { selectedTodo } = useContext(StateContext);\n\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [initialized, setInitialized] = useState(false);\n  const [\n    filterByStatus,\n    setFilterByStatus,\n  ] = useState<FilterStatus>(FilterStatus.ALL);\n  const [\n    filterByContent,\n    setFilterByContent,\n  ] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .then(() => setInitialized(true));\n  }, []);\n\n  useEffect(() => {\n    switch (filterByStatus) {\n      case FilterStatus.COMPLETE:\n        setVisibleTodos(\n          todos\n            .filter(todo => todo.completed)\n            .filter(todo => stringIncludes(todo.title, filterByContent)),\n        );\n        break;\n      case FilterStatus.ACTIVE:\n        setVisibleTodos(\n          todos\n            .filter(todo => !todo.completed)\n            .filter(todo => stringIncludes(todo.title, filterByContent)),\n        );\n        break;\n      case FilterStatus.ALL:\n      default:\n        setVisibleTodos(\n          todos\n            .filter(todo => stringIncludes(todo.title, filterByContent)),\n        );\n    }\n  }, [todos, filterByStatus, filterByContent]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterByStatus={filterByStatus}\n                setFilterByStatus={setFilterByStatus}\n                filterByContent={filterByContent}\n                setFilterByContent={setFilterByContent}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!initialized ? (\n                <Loader />\n              ) : (\n                <TodoList todos={visibleTodos} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { StateProvider } from './providers/StateProvider';\nimport { App } from './App';\n\nReactDOM.render(\n  <StateProvider>\n    <App />\n  </StateProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}